;chdir=/app
;# 指定项目目录
;
;wsgi-file=/app/sis001_django/wsgi.py
;# 指定加载WSGI文件
;
;master=true
;# 指定启动主进程
;;processes=4
;;# 设置工作进程的数量
;;threads=2
;;# 设置每个工作进程的线程数
;
;;设置静态文件
;static-map = /static=//app/static
;
;logfile-chmod=777
;# 指定日志文件的权限
;daemonize=/app/logs/django_uwsgi.log
;# 进程在后台运行，并将日志打印到指定文件
;
;;http-socke=0.0.0.0:8000
;socke=0.0.0.0:8000
;# 指定uwsgi的客户端将要连接的socket的路径（使用UNIX socket的情况）或者地址（使用网络地址的情况）。
;
;;# home=/xxx/xxx
;;# 指定虚拟环境变量
;;
;;callable=xxx
;;# uWSGI加载的模块中哪个变量将被调用
;;
;;vacuum=true
;;# 当服务器退出时自动删除unix socket文件和pid文件
;;
;;pidfile=%(chdir)/xxx.pid
;;# 在失去权限前，将主进程pid写到指定的文件
;;uid=xxx
;;# uWSGI服务器运行时的用户id
;;gid=xxx
;;# uWSGI服务器运行时的用户组id
;;procname-prefix-spaced=xxx
;;# 指定工作进程名称的前缀

[uwsgi]
# 指定启动主进程
master = true
;# 设置工作进程的数量
processes = 1
;# 设置每个工作进程的线程数
threads = 2
# 指定项目目录
chdir = /app
# 指定加载WSGI文件
wsgi-file= /app/sis001_django/wsgi.py
# 指定uwsgi的客户端将要连接的socket的路径（使用UNIX socket的情况）或者地址（使用网络地址的情况）。
http = 0.0.0.0:8000
# 进程在后台运行，并将日志打印到指定文件
logto = /app/logs/error.log
chmod-socket = 660
;# 当服务器退出时自动删除unix socket文件和pid文件
vacuum = true
max-requests = 1000
;设置静态文件
static-map = /static=//app/static